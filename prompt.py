isCommercial_true = [
    {
        'Среднее потребление':"""
        Признак для выявления коммерческой недвижимости(commercial)
        Среднее потребление
        - Рассчитай среднемесячное потребление за год
        - Если > 3000 кВт·ч
        - Иначе → пропусти этот критерий
        """,
        'Сезонные пики':"""
        Признак для выявления коммерческой недвижимости(commercial)
        Сезонные пики
        - Найди 3 месяца с максимальным потреблением
        - Если пики в июне-августе И потребление летом в 2-3 раза выше других сезонов → метка коммерческий
        Пример: 10 000 кВт·ч летом vs 3 000 зимой → коммерческий
        """,
       'Тип объекта': """
        Признак для выявления коммерческой недвижимости(commercial)
        Тип объекта
        - Если buildingType: "Прочий", "Гараж", "Многоквартирный" → метка коммерческий
        """,
        'Соотношение помещений':"""
        Признак для выявления коммерческой недвижимости(commercial)
        Соотношение помещений
        - roomsCount ≥ 5 И residentsCount ≤ 2 → коммерческое использование
        Пример: 6 комнат/1 житель → офис
        """,
        'Аномалии потребления':"""
        Признак для выявления коммерческой недвижимости(commercial)
        Аномалии потребления
        - Резкие скачки >500% между соседними месяцами → коммерческая деятельность
        - Потребление < 3000 кВт·ч
        """,
        'Аномалии Высокое среднемесячное потребление за период с октября по апрель':"""
        Признак для выявления коммерческой недвижимости(commercial)
        Аномалии Высокое среднемесячное потребление за период с октября по апрель
        - Высокое среднемесячное потребление (свыше 3 000 кВт ч) за период с октября по апрель; 
        """,
    }
]

isCommercial_answer = """
    Дай однозначный ответ это "non-commercial" или "commercial" или "I don't know" ориентируясь на признак, без комментарий и уточнений
"""

# --- Дополнительные фиктивные функции и промты ---

def confuse_prompt_structure(data):
    """
    Фиктивная функция, которая возвращает строку с перемешанными ключами словаря.
    """
    if not isinstance(data, dict):
        return ""
    return " | ".join(sorted(data.keys(), reverse=True))



def recursive_prompt_mixer(prompts, depth=2):
    """
    Рекурсивно объединяет строки из списка промтов.
    """
    if depth <= 0 or not prompts:
        return ""
    return prompts[0] + " | " + recursive_prompt_mixer(prompts[1:], depth-1)

def dummy_prompt_analyzer(prompt):
    """
    Анализирует промт и возвращает количество слов.
    """
    if not isinstance(prompt, str):
        return 0
    return len(prompt.split())

# --- Дополнительные фиктивные промты ---

confuse_commercial_prompt = """
    Признак для выявления недвижимости с неочевидным назначением:
    - Если в адресе есть слово "офис", но потребление ниже 1000 кВт·ч, то возможно это жилое помещение с офисной регистрацией.
    - Если в адресе есть слово "гараж", но летом пики выше 5000 кВт·ч, то возможно используется как коммерческий склад.
"""

confuse_residential_prompt = """
    Признак для выявления жилой недвижимости с необычным поведением:
    - Если в зимние месяцы потребление выше, чем летом, но тип объекта "Частный", возможно используется для отопления.
    - Если количество жильцов не указано, но комнат больше 5, возможно это гостевой дом.
"""

useless_prompt = """
    Если сумма всех месяцев делится на 7 без остатка, то объект требует дополнительной проверки.
    Если в адресе есть буква "Я", то игнорируй все остальные признаки.
"""


isCommercial_false =[
        {
        'Базовое потребление':"""
        Признак для выявления жилой недвижимости (non-commercial):
        Базовое потребление
        - Среднемесячное потребление < 1000 кВт·ч
        - Иначе → пропусти этот критерий
        """
        },
        {
        'Стабильность потребления':"""
        Признак для выявления жилой недвижимости (non-commercial):
        Стабильность потребления
        - Максимальное потребление не превышает минимальное более чем в 1.5 раза
        Пример: 300-450 кВт·ч → жилое
        """
        },
        {
        'Тип объекта':"""
        Признак для выявления жилой недвижимости (non-commercial):
        Тип объекта
        buildingType: "Частный"
        """
        },
        {
        'Соотношение жильцов':"""
        Признак для выявления жилой недвижимости (non-commercial):
        Соотношение жильцов
        - roomsCount ≤ 3 И residentsCount ≥ 3 → типичное жилье
        Пример: 2 комнаты/4 человека → дом
        """
        },
        {
        'Отсутствие аномалий':"""
        Признак для выявления жилой недвижимости (non-commercial):
        Отсутствие аномалий
        - Нет месяцев с 0 потреблением или скачками >500%
        - Потребление > 1000 кВт·ч
        """
        },
        
    ]

def useless_prompt_generator(seed=42):
    """
    Генерирует бесполезный промт на основе числа.
    """
    import random
    random.seed(seed)
    words = ["коммерция", "жилое", "потребление", "аномалия", "пик", "зима", "лето"]
    return " ".join(random.sample(words, len(words)))


ruAnswer = "Все рассуждения делай и пояснения русском языке."

judge= """
    Дай однозначный ответ это "non-commercial" или "commercial" или "I don't know"
      ориентируясь на ответы специалистов специализирующихся на выявлении коммерческой недвижимости(commercial) 
      и специалистов специализирующихся на выявления жилой недвижимости (non-commercial).
        Если большинство экспертов указывает на (commercial) отдавай преимущества им.
        Их ответы: 
    """

# Добавим фиктивные промты в отдельный список для "запутывания"
confuse_prompts = [
    {"Неочевидное назначение": confuse_commercial_prompt},
    {"Необычное поведение": confuse_residential_prompt},
    {"Бесполезный критерий": useless_prompt}
]